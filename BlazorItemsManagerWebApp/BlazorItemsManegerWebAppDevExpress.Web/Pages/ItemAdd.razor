@page "/item/add"

@inject IItemRepository itemRepository
@inject NavigationManager NavigationManager

<h3 class="text-center">Create new item</h3>

<div class="d-flex justify-content-center align-items-center">
    <div class="card p-4" style="max-width: 500px; width: 100%;">
        <EditForm Model="@itemAddViewModel" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />

            <div class="mb-3">
                <label for="name" class="form-label">Name:</label>
                <InputText id="name" class="form-control" @bind-Value="itemAddViewModel.Name" placeholder="Enter name of the item" />
            </div>

            <div class="mb-3">
                <label for="description" class="form-label">Description:</label>
                <InputText id="description" class="form-control" @bind-Value="itemAddViewModel.Description" placeholder="Enter some additional info for the item" />
            </div>

            <div class="mb-3">
                <label for="price" class="form-label">Price:</label>
                <InputNumber id="price" class="form-control" @bind-Value="itemAddViewModel.Price" step="0.01" min="0.00" />
            </div>

            <button type="submit" class="btn btn-primary w-100">Submit</button>
        </EditForm>
    </div>
</div>

@code {
    private ItemAddViewModel itemAddViewModel = new ItemAddViewModel();

    private async Task HandleValidSubmit()
    {
        if (!itemAddViewModel.CheckValues())
        {
            NavigationManager.NavigateTo(NavigationManager.Uri, true);
        }

        var result = await itemRepository.CreateItemAsync(itemAddViewModel);

        if (result)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            NavigationManager.NavigateTo(NavigationManager.Uri, true);
        }
    }
}
