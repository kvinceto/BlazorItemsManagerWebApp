@page "/item/edit/{Id}"
@inject IItemRepository itemRepository
@inject NavigationManager NavigationManager

<h3 class="text-center">Edit existing item</h3>

@if (item == null)
{
    <p>No item selected</p>
}
else
{
    <div class="d-flex justify-content-center align-items-center">
        <div class="card p-4" style="max-width: 500px; width: 100%;">
            <EditForm Model="@item" OnValidSubmit="HandleSubmit">
                <DataAnnotationsValidator />

                <div class="mb-3">
                    <label for="name" class="form-label">Name:</label>
                    <InputText id="name" class="form-control" @bind-Value="item.Name" placeholder="Enter name of the item" />
                </div>

                <div class="mb-3">
                    <label for="description" class="form-label">Description:</label>
                    <InputText id="description" class="form-control" @bind-Value="item.Description" placeholder="Enter some additional info for the item" />
                </div>

                <div class="mb-3">
                    <label for="price" class="form-label">Price:</label>
                    <InputNumber id="price" class="form-control" @bind-Value="item.Price" step="0.01" min="0.00" />
                </div>

                <button type="submit" class="btn btn-primary w-100">Submit</button>
            </EditForm>
        </div>
    </div>
}

@code {
    [Parameter]
    public string? Id { get; set; }

    private ItemEditViewModel? item;

    protected override async Task OnInitializedAsync()
    {
        var res = await itemRepository.GetItemAsync(int.Parse(Id));
        if (res != null)
        {
            item = new ItemEditViewModel()
                {
                    Id = res.Id,
                    Name = res.Name,
                    Description = res.Description
                };
        }
    }

    private async Task HandleSubmit()
    {
        if (item.CheckValues())
        {
            var result = await itemRepository.EditItemAsync(item);
            if (result)
            {
                NavigationManager.NavigateTo("/items", true);
            }
            else
            {
                NavigationManager.NavigateTo(NavigationManager.Uri, true);
            }
        }
        else
        {
            NavigationManager.NavigateTo(NavigationManager.Uri, true);
        }
    }
}
