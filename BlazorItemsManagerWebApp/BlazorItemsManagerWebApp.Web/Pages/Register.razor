@page "/register"

@using BlazorItemsManagerWebApp.Web.ViewModels
@using BlazorItemsManagerWebApp.Web.Data.Repositories.Contracts
@using static BlazorItemsManagerWebApp.Web.Common.ApplicationConstants.GlobalContants;

@inject IUserRepository UserRepository
@inject NavigationManager NavigationManager

<h1>Register</h1>

<EditForm Model="@user" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="email">Email:</label>
        <InputText id="email" class="form-control" @bind-Value="user.Email" placeholder="example@example.com" />
        <ValidationMessage For="@(() => user.Email)" />
    </div>

    <div class="form-group">
        <label for="password">Password:</label>
        <InputText id="password" class="form-control" @bind-Value="user.Password"/>
        <ValidationMessage For="@(() => user.Password)" />
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@code {
    private UserViewModel user = new UserViewModel() { Role = RoleNameClient };

    private async Task HandleValidSubmit()
    {
        bool hasErrors = user.CheckValues();
        if (hasErrors)
        {
            NavigationManager.NavigateTo(NavigationManager.Uri, true);
        }
        var result = await UserRepository.RegisterUserAsync(user);
        if (result > 0)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            NavigationManager.NavigateTo(NavigationManager.Uri, true);
        }
    }
}
